require 'ostruct'

# -*- mode: ruby -*-
# vi: set ft=ruby :
$subnet = '172.168.10'
$etcd_instances = 1
$k8s_master_instances = 1
$k8s_worker_instances = 1
$initial_ip_suffix = 101
$box = 'bento/centos-7.3'

# @return [Array]
def server_configurations
  available_ips = ($etcd_instances + $k8s_master_instances + $k8s_worker_instances)
                    .times
                    .map { |index| "#{$subnet}.#{$initial_ip_suffix+index}" }
  [
    build_servers(prefix: 'local-etcd-server',
                  instances: $etcd_instances,
                  available_ips: available_ips,
                  tags: ['etcd'],
                  settings: {memory: 1536, cpus: 1}),
    build_servers(prefix: 'local-k8s-master-server',
                  instances: $k8s_master_instances,
                  available_ips: available_ips,
                  tags: ['kube-master'],
                  settings: {memory: 1536, cpus: 1}),
    build_servers(prefix: 'local-k8s-worker-server',
                  instances: $k8s_worker_instances,
                  available_ips: available_ips,
                  tags: ['kube-node'],
                  settings: {memory: 1536, cpus: 2})
  ].flatten
end

# @return [Array]
def build_servers(prefix:, instances:, available_ips:, tags:, settings: {})
  instances.times.map { |instance_number| OpenStruct.new(
    name: "#{prefix}-#{instance_number.next}",
    ip: available_ips.delete_at(0),
    tags: tags,
    settings: OpenStruct.new(settings)
  ) }
end

def server_names_by_tag(tag)
  server_configurations.select { |server| server.tags.include?(tag) }.map(&:name)
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure('2') do |config|

  config.ssh.insert_key = false
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = $box

  # plugin conflict
  if Vagrant.has_plugin?('vagrant-vbguest')
    config.vbguest.auto_update = false
  end

  ansible_host_vars = {}
  server_configurations.each do |server|
    config.vm.define server.name do |config|
      config.vm.hostname = server.name
      config.vm.network :private_network, ip: server.ip

      config.vm.provider 'virtualbox' do |vb|
        vb.name  = server.name
        # Display the VirtualBox GUI when booting the machine
        vb.gui = false

        # Customize the amount of memory on the VM:
        vb.memory = server.settings.memory
        vb.cpus = server.settings.cpus
        vb.linked_clone = true
        vb.customize ['modifyvm', :id, '--cpuexecutioncap', '30']
      end

      ansible_host_vars[server.name] = {
        'ip' => server.ip,
        'bootstrap_os' => 'centos',
        'flannel_interface' => server.ip,
        'flannel_backend_type' => 'host-gw',
        'local_release_dir' => '/vagrant/temp',
        'download_run_once' => 'False',
        # Override the default 'calico' with flannel.
        # inventory/group_vars/k8s-cluster.yml
        'kube_network_plugin' => 'flannel',
        'helm_enabled' => true
        # 'apiserver_custom_flags' => '--authorization-mode=RBAC' # https://kubernetes.io/docs/admin/authorization/rbac/
      }
    end
  end

  config.vm.provision 'ansible' do |ansible|
    ansible.playbook = 'inventory-playbook.yml'
    ansible.host_vars = ansible_host_vars
    ansible.groups = {
      'etcd' => server_names_by_tag('etcd'),
      'kube-master' => server_names_by_tag('kube-master'),
      'kube-node' => server_names_by_tag('kube-node'),
      'k8s-cluster:children' => ['kube-master', 'kube-node'],
    }
    ansible.sudo = true
    ansible.limit = 'all'
    ansible.host_key_checking = false
  end
end
